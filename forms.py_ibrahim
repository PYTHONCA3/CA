 #REFERENCE: https://www.youtube.com/watch?v=MwZwr5Tvyxo
from flask_wtf import FlaskForm
from wtforms import StringField, PasswordField, SubmitField, BooleanField, IntegerField, TextAreaField, DecimalField, DateField
import phonenumbers
from wtforms.validators import DataRequired, Length, Email, EqualTo, ValidationError
from helo.model import User
from flask_wtf.file import FileField, FileAllowed, FileRequired
from helo import images

class RegistrationForm(FlaskForm):
	fullname = StringField('Fullname', validators=[DataRequired(), Length(min=2, max=100)])
	email =  StringField('Email', validators=[DataRequired(), Email()])
	username = StringField('Username', validators=[DataRequired(), Length(min=2, max=20)])
	password = PasswordField ('Password', validators=[DataRequired()])
	confirm_password = PasswordField ('Confirm Password', validators=[DataRequired(), EqualTo('password')])
	mobile = StringField('Mobile', validators=[DataRequired()])
	submit = SubmitField('SignUp')

	def validate_username(self,username):
		user = User.query.filter_by(username=username.data).first()
		if user:
	 		raise ValidationError ('That username already exit, Please choose a different one')

	def validate_email(self,email):
		user = User.query.filter_by(email=email.data).first()
		if user:
	 		raise ValidationError ('That email already exit, Please choose a different one')

class LoginForm(FlaskForm):
	email = StringField('Email', validators=[DataRequired(), Email()]) 
	password = PasswordField ('Password', validators=[DataRequired()])
	remember = BooleanField ('Remember Me')
	submit = SubmitField('Login')

class Productform(FlaskForm):
	 
	pName = StringField('Product Name', validators=[DataRequired(), Length(min=2, max=100)])
	description = TextAreaField('Product Description', validators=[DataRequired()])
	price = DecimalField ('Product Price', validators=[DataRequired()])
	available = DecimalField ('Product Available', validators=[DataRequired()])
	category = StringField('Category', validators=[DataRequired()])
	pCode = StringField('PCode', validators=[DataRequired()])
	item = StringField('Item', validators=[DataRequired()])
	picture = FileField('Image', validators=[FileRequired(), FileAllowed(images, 'Images only!')])
	date_created = DateField('Date', validators=[DataRequired()])
	submit = SubmitField('Add')
	
 



 
